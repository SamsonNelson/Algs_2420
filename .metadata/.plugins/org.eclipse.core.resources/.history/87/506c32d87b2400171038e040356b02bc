package wordNet;

import edu.princeton.cs.algs4.Digraph;
import edu.princeton.cs.introcs.In;
import edu.princeton.cs.introcs.StdIn;

public class SAP {
	
	   public SAP(Digraph G) {
		   
	   }

//	   public boolean isDAG() {
//		   
//	   }

//	   public boolean isRootedDAG() {
//		   
//	   }

//	   public int length(int v, int w) {
//		   
//	   }

//	   public int ancestor(int v, int w) {
//		   
//	   }

//	   public int length(Iterable<Integer> v, Iterable<Integer> w) {
//		   
//	   }

//	   public int ancestor(Iterable<Integer> v, Iterable<Integer> w) {
//		   
//	   }

	public static void main(String[] args) {
		In in = new In(args[0]);
	    Digraph G = new Digraph(in);
	    SAP sap = new SAP(G);
	    while (!StdIn.isEmpty()) {
	        int v = StdIn.readInt();
	        int w = StdIn.readInt();
	        System.out.println(v);
	        System.out.println(w);
	        
//	        int length   = sap.length(v, w);
//	        int ancestor = sap.ancestor(v, w);
//	        StdOut.printf("length = %d, ancestor = %d\n", length, ancestor);
	}
	}
}
